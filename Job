#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>

typedef struct Jobs {
   char id;
   int dead;
   int profit;
} Jobs;

int compare(const void* a, const void* b){
   Jobs* temp1 = (Jobs*)a;
   Jobs* temp2 = (Jobs*)b;
   return (temp2->profit - temp1->profit);
}

int min(int num1, int num2){
   return (num1 > num2) ? num2 : num1;
}

int main(){
   int numJobs;
   printf("Enter the number of jobs: ");
   scanf("%d", &numJobs);

   Jobs *arr = (Jobs*)malloc(numJobs * sizeof(Jobs));
   if (arr == NULL) {
      printf("Memory allocation failed\n");
      return 1;
   }

   printf("Enter details for each job (id, deadline, profit):\n");
   for (int i = 0; i < numJobs; i++) {
      printf("Job %d: ", i + 1);
      scanf(" %c %d %d", &arr[i].id, &arr[i].dead, &arr[i].profit);
   }

   printf("Following is maximum profit sequence of Jobs: \n");
   qsort(arr, numJobs, sizeof(Jobs), compare);

   int result[numJobs];
   bool slot[numJobs];

   for (int i = 0; i < numJobs; i++)
      slot[i] = false;

   for (int i = 0; i < numJobs; i++) {
      for (int j = min(numJobs, arr[i].dead) - 1; j >= 0; j--) {
         if (slot[j] == false) {
            result[j] = i;
            slot[j] = true;
            break;
         }
      }
   }

   for (int i = 0; i < numJobs; i++)
      if (slot[i])
         printf("%c ", arr[result[i]].id);

   free(arr);
   return 0;
}
