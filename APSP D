#include <stdio.h>

int min(int a, int b) {
    if (a > b) {
        return b;
    } else {
        return a;
    }
}

int main() {
    int n;
    printf("Enter the size of the matrix: ");
    scanf("%d", &n);
    
    int A[n][n];
    
    printf("Enter the elements of the matrix:\n(Enter 99 if there is no path)\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &A[i][j]);
        }
    }
    
    // Print initial matrix
    printf("\nInitial matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d\t", A[i][j]);
        }
        printf("\n");
    }
    
    // Floyd-Warshall algorithm
    for (int k = 0; k < n; k++) {
        printf("\nIteration %d:\n", k+1);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                A[i][j] = min(A[i][j], A[i][k] + A[k][j]);
                printf("%d\t", A[i][j]); // Print intermediate step
            }
            printf("\n");
        }
    }
    
    // Print final result
    printf("\nAll pair shortest paths are:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d\t", A[i][j]);
        }
        printf("\n");
    }
    
    return 0;
} 
